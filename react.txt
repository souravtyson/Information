react js

stateful component/class component - maintain its own internal state. You may see stateful components referred to simply as components or React components.

Example : 

class MyApp extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      inputValue: ''
    }
    this.handleChange = this.handleChange.bind(this);
  }
  handleChange(event) {
    this.setState({
      inputValue: event.target.value
    });
  }
  render() {
    return (
       <div>
        { /* change code below this line */ }

        { /* change code above this line */ }
       </div>
    );
  }
};

--------------------------------------------------------------------

stateless functional component -  any function you write which accepts props and returns JSX

--------------------------------------------------------------------

stateless component - is a class that extends React.Component, but does not use internal state

Example : 

class RenderInput extends React.Component {
  constructor(props) {
    super(props);
  }
  render() {
    return (
      <div>
        <h3>Input Render:</h3>
        <p>{this.props.input}</p>
      </div>
    );
  }
};

********************************************************************

comp - freshworks

import React, { useState } from 'react';
import './style.css';

//Dynamic add the city names in the page via input text and click button in React and display on the page?

export default function App() {
  const [city, setCity] = useState(['Bangalore']);
  const [newCity, setNewCity] = useState('');
  const setCityToVar = () => {
    setCity([...city, newCity]);
  };

  return (
    <div>
      <input
        type="text"
        value={newCity}
        onChange={(e) => setNewCity(e.target.value)}
      />
      <button onClick={setCityToVar}>Add city</button>
      {city.map(function (item, i) {
        return <li>{item}</li>;
      })}
    </div>
  );
}



****************************************************************************



import React from "react";

function App(props){
	const [name, setName] = useState("")

	return (
		<div></div>
	);
}


export default App 

input - props
output - JSX


import React, {Component} from "react"; 

class App extends Component{
	constructor(props){
		super(props)
		this.state = {
			name: ""
		}
	}

	render() {
		return(
			<div></div>
		)
	}
}


export default App


****************************************************************

use render function to return the JSX
render function can have console function or some javascript code along with return statement
render function runs everytime when components re-renders
state is not supported in functional components until the entry of react hooks
in class based component this will point to instance of the component
