find top transaction -                                      
grep 'NBISM' report.txt | sort -rn -t, -k6,6 | head -2 >> toptransaction.txt
grep 'NBBAR' report.txt | sort -rn -t, -k6,6 | head -2 >> toptransaction.txt
grep 'NBP2M' report.txt | sort -rn -t, -k6,6 | head -2 >> toptransaction.txt
grep 'NBBPCL' report.txt | sort -rn -t, -k6,6 | head -2 >> toptransaction.txt
grep 'NBISUP' report.txt | sort -rn -t, -k6,6 | head -2 >> toptransaction.txt
grep 'NBBOL' report.txt | sort -rn -t, -k6,6 | head -2 >> toptransaction.txt

JioSignUp
Purchase
NBILM
JioRec


nginx access log (data for)rps                                                                                                                    
cat access.log | awk '{print $4}'  | sort -n  | uniq -c

instmodsh

grep -rl 'sundar' ./utility | xargs sed -i 's/sundar/ubuntu/g'
grep -R '/home/' utility/

sysctl net.ipv4.ip_local_port_range
echo 32768 61000 > /proc/sys/net/ipv4/ip_local_port_range

 
jstat  :

sudo ./jstat -gcutil -t 8825 2000 25000 >> /tmp/gcutil_20Jan_53_closure.log &
sudo ./jstat -gcutil -t 19563 2000 25000 >> /tmp/gcutil_20Jan_59_closure.log &

21234/2634 is the process id

cat match.log | awk '{print $6}' | sort -n | uniq -c

awk '{print $2}' tsung.log|grep "tr_" | sort -n | uniq  > /home/sundar/avekshaa/jiomoney/utility/percentile/MIXLOAD.txt

if percentile data is not created in tsung_post then creating a percentile you need to get the transaction name from the tsung.log

TASKKILL /F /IM note*

cat socket.txt | tr -d '\n' | sed 's/TIME:/\'$'\n/g' | awk '/ESTABLISHED/ {gsub(/18_01_2017_/,"",$1);print $1"\t"$2}'
cat socketsstate.txt | tr -d '\n' | sed 's/TIME:/\'$'\n/g' |grep '18_01_2017' | awk '/ESTABLISHED/ {gsub(/18_01_2017_/,"",$1);print $1"\t"$2}'
cat socket.txt | tr -d '\n' | sed 's/TIME:/\'$'\n/g' |grep '11_01_2017_' | awk '/ESTABLISHED/ {gsub(/11_01_2017_/,"",$1);print $1"\t"$2}'
cat socketsstate.txt | tr -d '\n' | sed 's/TIME:/\'$'\n/g' |grep '18_01_2017_.*ESTABLISHED' | awk '{for(i=1;i<=NF;i++){ if($i=="ESTABLISHED"){gsub(/18_01_2017_/,"",$1) print $1"\t"$i"\t"$(i-1)} } }'
cat socket.txt | tr -d '\n' | sed 's/TIME:/\'$'\n/g' |grep '11_01_2017_.*ESTABLISHED' | awk '{for(i=1;i<=NF;i++){ if($i=="ESTABLISHED"){gsub(/11_01_2017_/,"",$1); print $1"\t"$(i-1)"\t"$i;} if($i=="TIME_WAIT") {gsub(/18_01_2017_/,"",$1)}; print $1"\t"$(i-1)"\t"$i }}'

 

 

 

awk -F'|' '

{

  for(i=1;i<=NF;i++) {

    if($i == "ESTABLISHED")

      printf("Column %d \n", i-1)

  }

  exit 0

}

' socket.txt

 

 

 

du -a / | sort -n -r | head -n 10

 

awk '{print $2}' tsung.log | grep 'tr_' | sort | uniq

 

 

 

sed -n '/17:55:35/,/18:11:33/p' access.log_success_3 > resp_URL.txt

 

sed -n '/14\/Nov\/2017:22:20:31/,/14\/Nov\/2017:22:50:28/p' access.log-20171115 > ngi_244_53_api_res

 

xauth add $(xauth  -f ~nikhila/.Xauthority list|tail -1)

 

 

redis-cli --stat -h 10.130.242.36

 

./redis-benchmark -c 1000 -n 100000 -q -h 127.0.0.1

 

java -jar redis-stat-0.4.14.jar -h 10.130.242.36:6379 10.130.242.36:6380 10.130.242.36:6381 10.130.242.36:6382 10.130.242.38:6379 10.130.242.38:6380 10.130.242.38:6381 10.130.242.38:6382 --server=63790 5 -v --no-color

 

 

 

sudo chown -R ubuntu:ubuntu userDistribution

 

 

 

zip -r backup.zip *

mv !(bkup) bkup/

rm -rf *. !(backup.zip)

unzip backup.zip

 

 

awk -F ',' '{print $2 - $1}' user_00.csv

 


 curl --data "value={"mpin":"1111"}" "http://10.130.242.65:8445/PGSignInOTPEncryption/WalletHeaderEncryption"

 

curl --data "username=9663756120&amp;password=Mumbai02&amp;grant_type=password" "https://10.140.206.30:8080/auth/oauth/v2/token"

 

 

 

 

 cd /home/nikhila/IDAM_stub-master

 /home/nikhila/.rvm/bin/rvmsudo unicorn -c config/unicorn.rb &


 rvmsudo /usr/local/bin/unicorn -c config/unicorn.rb &


 nikhila  43259     1  0 Jul05 ?        00:00:00 bash /home/nikhila/.rvm/bin/rvmsudo unicorn -c config/unicorn.rb

root     43265 43259  0 Jul05 ?        00:00:00 sudo /usr/bin/env rvm_bin_path=/home/nikhila/.rvm/bin http_proxy=http://10.130.244.21:8080 rvm_path=/home/nikhila/.rvm rvm_prefix=/home/nikhila PATH=/usr/lib64/qt-3.3/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/home/nikhila/.rvm/bin:/home/nikhila/bin:/home/nikhila/.rvm/bin rvm_version=1.26.11 (manual) rvmsudo_secure_path=1 unicorn -c config/unicorn.rb

root     43266 43265  0 Jul05 ?        00:00:01 unicorn master -c config/unicorn.rb

root     43268 43266  0 Jul05 ?        00:01:16 unicorn worker[0] -c config/unicorn.rb

root     43271 43266  0 Jul05 ?        00:01:16 unicorn worker[1] -c config/unicorn.rb

root     43274 43266  0 Jul05 ?        00:01:16 unicorn worker[2] -c config/unicorn.rb

root     43277 43266  0 Jul05 ?        00:01:16 unicorn worker[3] -c config/unicorn.rb

root     43280 43266  0 Jul05 ?        00:01:15 unicorn worker[4] -c config/unicorn.rb

root     43282 43266  0 Jul05 ?        00:01:16 unicorn worker[5] -c config/unicorn.rb

nikhila  53111 52459  0 13:35 pts/1    00:00:00 grep unicorn

 


 


 

 109 - jvisualvm

sudo su && cd /usr/java/jdk1.7.0_121/bin

jvisualvm


 

 

 /opt/SecureSpan/Gateway/node/default/etc/conf/system.properties

/opt/SecureSpan/Gateway/node/default/etc/conf/node.properties

service ssg status

/opt/SecureSpan/Gateway/runtime/etc/profile.d/appliancedefs.sh


 

 

 

jmap -histo:live 122680 | head

 

jmap -heap 122680 | head

 

jstat -gc 122680  2000 <amount>

 

 

awk '/errors/ {match($0,/errors/); print substr($0, RSTART-1, RLENGTH+9); }' tsung.dump


 

 NODE_ENV=production node --prof app.js

 

 

 

 

tibco jmx enabled:

 

Jmx.Enabled=true

java.property.com.sun.management.jmxremote=true

java.property.com.sun.management.jmxremote.port=<port number>

java.property.com.sun.management.jmxremote.authenticate=false

java.property.com.sun.management.jmxremote.ssl=false

 

 

:%s/$/\*/g

 

 

sed -n '/19:13:13 /,/19:284:00/p' access.log_success_3 > resp_URL.txt

 

 

awk -F ';' '{x="6785c5c0-1386-451a-8b61-f1"; print x$1}' templates/csv/Wallet/Wallet_OpenLoop_User_Recharge.csv

 

 

 

sudo python setup.py install

 

awk '{printf $1" "$7" ""%x\n",$7}'

 

 

D:\Avekshaa\Jagdish\NewWalletBackend\NewUseCase\Tsung_Backup\14-Nov-17\scripts_R2\templates\Backup_110Shrikant\data2\scripts_R2\templates\transitApp

 

 

 

sed "s/dumptraffic=\"false\"/dumptraffic=\"true\"/" copy.xml

sed -i "s/dumptraffic=\"false\"/dumptraffic=\"true\"/" copy.xml
